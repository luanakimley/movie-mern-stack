{"ast":null,"code":"var _jsxFileName = \"/Users/luanakimley/nodejs-projects/movie-mern-stack/client/src/components/EditMovie.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nimport { Form, Row, Col, Button, InputGroup } from \"react-bootstrap\";\nimport Swal from \"sweetalert2\";\nimport { XLg } from \"react-bootstrap-icons\";\nimport FileBase64 from \"react-file-base64\";\nexport default class EditMovie extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.addGenre = e => {\n      if (this.state.selectedGenre !== \"\" && !this.state.genres.includes(this.state.selectedGenre)) {\n        this.setState({\n          genres: [...this.state.genres, this.state.selectedGenre]\n        });\n      }\n    };\n\n    this.removeGenre = e => {\n      this.setState({\n        genres: this.state.genres.filter(g => g !== e.currentTarget.dataset.id)\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const movieObject = {\n        title: this.state.title,\n        year: this.state.year,\n        runtime: this.state.runtime,\n        genres: this.state.genres,\n        director: this.state.director,\n        actors: this.state.actors,\n        plot: this.state.plot,\n        posterUrl: this.state.posterUrl\n      };\n      axios.put(`${SERVER_HOST}/movies/${this.props.match.params.id}`, movieObject).then(res => {\n        if (res.data) {\n          if (res.data.errorMessage) {\n            console.log(res.data.errorMessage);\n          } else {\n            console.log(\"Record updated\");\n            Swal.fire({\n              title: \"Record updated\",\n              text: \"The movie details have been updated.\",\n              icon: \"success\",\n              showConfirmButton: false,\n              timer: 1500\n            });\n            this.setState({\n              redirectToHome: true\n            });\n          }\n        } else {\n          console.log(\"Record not updated\");\n          Swal.fire({\n            title: \"Records Not Updated\",\n            text: \"Make sure that data is valid and is not a duplicate.\",\n            icon: \"error\",\n            confirmButtonColor: \"#123c69\",\n            showConfirmButton: true\n          });\n        }\n      });\n    };\n\n    this.state = {\n      title: \"\",\n      year: \"\",\n      runtime: \"\",\n      genres: [],\n      director: \"\",\n      actors: \"\",\n      plot: \"\",\n      posterUrl: \"\",\n      redirectToHome: false,\n      selectedGenre: \"\"\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${SERVER_HOST}/movies/${this.props.match.params.id}`).then(res => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          console.log(res.data.errorMessage);\n        } else {\n          this.setState({\n            title: res.data.title,\n            year: res.data.year,\n            runtime: res.data.runtime,\n            genres: res.data.genres,\n            director: res.data.director,\n            actors: res.data.actors,\n            plot: res.data.plot,\n            posterUrl: res.data.posterUrl\n          });\n        }\n      } else {\n        console.log(`Record not found`);\n      }\n    });\n  }\n\n  render() {\n    const genres = [\"Action\", \"Adventure\", \"Animation\", \"Biography\", \"Comedy\", \"Crime\", \"Documentary\", \"Drama\", \"Family\", \"Fantasy\", \"Film-Noir\", \"Game-Show\", \"History\", \"Horror\", \"Music\", \"Musical\", \"Mystery\", \"News\", \"Reality-TV\", \"Romance\", \"Sci-Fi\", \"Sport\", \"Talk-Show\", \"Thriller\", \"War\", \"Western\"];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, \"Edit Movie\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, this.state.redirectToHome ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 40\n      }\n    }) : null, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n      ref: input => {\n        this.inputToFocus = input;\n      },\n      type: \"text\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      className: \"g-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"year\",\n      value: this.state.year,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"runtime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }, \"Runtime\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"runtime\",\n      value: this.state.runtime,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"genres\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 15\n      }\n    }, \"Genres\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"selectedGenre\",\n      as: \"select\",\n      onChange: this.handleChange,\n      defaultValue: \"DEFAULT\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"DEFAULT\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 19\n      }\n    }, \"Select genre...\"), genres.filter(g => !this.state.genres.includes(g)).map(g => /*#__PURE__*/React.createElement(\"option\", {\n      key: g,\n      value: g,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 23\n      }\n    }, g))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-secondary\",\n      onClick: this.addGenre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }, \"Add Genre\")), this.state.genres.map(g => /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-secondary p-1 mt-2 mr-2\",\n      key: g,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, g, /*#__PURE__*/React.createElement(XLg, {\n      \"data-id\": g,\n      className: \"ml-1\",\n      onClick: this.removeGenre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"plot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    }, \"Plot\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"plot\",\n      as: \"textarea\",\n      value: this.state.plot,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"director\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 15\n      }\n    }, \"Director\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"director\",\n      value: this.state.director,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"actors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 15\n      }\n    }, \"Actors\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"actors\",\n      value: this.state.actors,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 15\n      }\n    }, \"Poster\"), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"posterUrl\",\n      value: this.state.posterUrl,\n      onChange: this.handleChange,\n      placeholder: \"Enter poster link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 19\n      }\n    })), \" \", \"or\", /*#__PURE__*/React.createElement(Col, {\n      md: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FileBase64, {\n      multiple: false,\n      onDone: _ref => {\n        let {\n          base64\n        } = _ref;\n        return this.setState({\n          posterUrl: base64\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success mr-2\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }\n    }, \"Update\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"btn btn-danger ml-2\",\n      to: \"/Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }\n    }, \"Cancel\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/luanakimley/nodejs-projects/movie-mern-stack/client/src/components/EditMovie.js"],"names":["React","Component","Redirect","Link","axios","SERVER_HOST","Form","Row","Col","Button","InputGroup","Swal","XLg","FileBase64","EditMovie","constructor","props","handleChange","e","setState","target","name","value","addGenre","state","selectedGenre","genres","includes","removeGenre","filter","g","currentTarget","dataset","id","handleSubmit","preventDefault","movieObject","title","year","runtime","director","actors","plot","posterUrl","put","match","params","then","res","data","errorMessage","console","log","fire","text","icon","showConfirmButton","timer","redirectToHome","confirmButtonColor","componentDidMount","get","render","input","inputToFocus","map","base64"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nimport { Form, Row, Col, Button, InputGroup } from \"react-bootstrap\";\nimport Swal from \"sweetalert2\";\nimport { XLg } from \"react-bootstrap-icons\";\nimport FileBase64 from \"react-file-base64\";\n\nexport default class EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      year: \"\",\n      runtime: \"\",\n      genres: [],\n      director: \"\",\n      actors: \"\",\n      plot: \"\",\n      posterUrl: \"\",\n      redirectToHome: false,\n      selectedGenre: \"\",\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${SERVER_HOST}/movies/${this.props.match.params.id}`)\n      .then((res) => {\n        if (res.data) {\n          if (res.data.errorMessage) {\n            console.log(res.data.errorMessage);\n          } else {\n            this.setState({\n              title: res.data.title,\n              year: res.data.year,\n              runtime: res.data.runtime,\n              genres: res.data.genres,\n              director: res.data.director,\n              actors: res.data.actors,\n              plot: res.data.plot,\n              posterUrl: res.data.posterUrl,\n            });\n          }\n        } else {\n          console.log(`Record not found`);\n        }\n      });\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  addGenre = (e) => {\n    if (\n      this.state.selectedGenre !== \"\" &&\n      !this.state.genres.includes(this.state.selectedGenre)\n    ) {\n      this.setState({\n        genres: [...this.state.genres, this.state.selectedGenre],\n      });\n    }\n  };\n\n  removeGenre = (e) => {\n    this.setState({\n      genres: this.state.genres.filter((g) => g !== e.currentTarget.dataset.id),\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const movieObject = {\n      title: this.state.title,\n      year: this.state.year,\n      runtime: this.state.runtime,\n      genres: this.state.genres,\n      director: this.state.director,\n      actors: this.state.actors,\n      plot: this.state.plot,\n      posterUrl: this.state.posterUrl,\n    };\n\n    axios\n      .put(`${SERVER_HOST}/movies/${this.props.match.params.id}`, movieObject)\n      .then((res) => {\n        if (res.data) {\n          if (res.data.errorMessage) {\n            console.log(res.data.errorMessage);\n          } else {\n            console.log(\"Record updated\");\n            Swal.fire({\n              title: \"Record updated\",\n              text: \"The movie details have been updated.\",\n              icon: \"success\",\n              showConfirmButton: false,\n              timer: 1500,\n            });\n            this.setState({ redirectToHome: true });\n          }\n        } else {\n          console.log(\"Record not updated\");\n          Swal.fire({\n            title: \"Records Not Updated\",\n            text: \"Make sure that data is valid and is not a duplicate.\",\n            icon: \"error\",\n            confirmButtonColor: \"#123c69\",\n            showConfirmButton: true,\n          });\n        }\n      });\n  };\n\n  render() {\n    const genres = [\n      \"Action\",\n      \"Adventure\",\n      \"Animation\",\n      \"Biography\",\n      \"Comedy\",\n      \"Crime\",\n      \"Documentary\",\n      \"Drama\",\n      \"Family\",\n      \"Fantasy\",\n      \"Film-Noir\",\n      \"Game-Show\",\n      \"History\",\n      \"Horror\",\n      \"Music\",\n      \"Musical\",\n      \"Mystery\",\n      \"News\",\n      \"Reality-TV\",\n      \"Romance\",\n      \"Sci-Fi\",\n      \"Sport\",\n      \"Talk-Show\",\n      \"Thriller\",\n      \"War\",\n      \"Western\",\n    ];\n\n    return (\n      <div id=\"form\">\n        <h2>Edit Movie</h2>\n        <div className=\"form-container\">\n          {this.state.redirectToHome ? <Redirect to=\"/Home\" /> : null}\n\n          <Form>\n            <Form.Group controlId=\"title\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                ref={(input) => {\n                  this.inputToFocus = input;\n                }}\n                type=\"text\"\n                name=\"title\"\n                value={this.state.title}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n\n            <Row className=\"g-2\">\n              <Col md>\n                <Form.Group controlId=\"year\">\n                  <Form.Label>Year</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"year\"\n                    value={this.state.year}\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n              </Col>\n              <Col md>\n                <Form.Group controlId=\"runtime\">\n                  <Form.Label>Runtime</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"runtime\"\n                    value={this.state.runtime}\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Form.Group controlId=\"genres\">\n              <Form.Label>Genres</Form.Label>\n\n              <InputGroup>\n                <Form.Control\n                  name=\"selectedGenre\"\n                  as=\"select\"\n                  onChange={this.handleChange}\n                  defaultValue={\"DEFAULT\"}\n                >\n                  <option value=\"DEFAULT\" disabled>\n                    Select genre...\n                  </option>\n                  {genres\n                    .filter((g) => !this.state.genres.includes(g))\n                    .map((g) => (\n                      <option key={g} value={g}>\n                        {g}\n                      </option>\n                    ))}\n                </Form.Control>\n\n                <Button variant=\"outline-secondary\" onClick={this.addGenre}>\n                  Add Genre\n                </Button>\n              </InputGroup>\n              {this.state.genres.map((g) => (\n                <span className=\"badge badge-secondary p-1 mt-2 mr-2\" key={g}>\n                  {g}\n                  <XLg\n                    data-id={g}\n                    className=\"ml-1\"\n                    onClick={this.removeGenre}\n                  />\n                </span>\n              ))}\n            </Form.Group>\n\n            <Form.Group controlId=\"plot\">\n              <Form.Label>Plot</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"plot\"\n                as=\"textarea\"\n                value={this.state.plot}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"director\">\n              <Form.Label>Director</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"director\"\n                value={this.state.director}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"actors\">\n              <Form.Label>Actors</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"actors\"\n                value={this.state.actors}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Poster</Form.Label>\n              <Row>\n                <Col md>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"posterUrl\"\n                    value={this.state.posterUrl}\n                    onChange={this.handleChange}\n                    placeholder=\"Enter poster link\"\n                  />\n                </Col>{\" \"}\n                or\n                <Col md>\n                  <FileBase64\n                    multiple={false}\n                    onDone={({ base64 }) =>\n                      this.setState({ posterUrl: base64 })\n                    }\n                  />\n                </Col>\n              </Row>\n            </Form.Group>\n\n            <button\n              className=\"btn btn-success mr-2\"\n              onClick={this.handleSubmit}\n            >\n              Update\n            </button>\n\n            <Link className=\"btn btn-danger ml-2\" to={\"/Home\"}>\n              Cancel\n            </Link>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}