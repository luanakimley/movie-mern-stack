{"ast":null,"code":"var _jsxFileName = \"/Users/luanakimley/nodejs-projects/movie-mern-stack/client/src/components/AddMovie.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nimport { Form, Row, Col, Button, InputGroup } from \"react-bootstrap\";\nimport Swal from \"sweetalert2\";\nimport { XLg } from \"react-bootstrap-icons\";\nimport FileBase64 from \"react-file-base64\";\nexport default class AddMovie extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.addGenre = e => {\n      if (this.state.selectedGenre !== \"\" && !this.state.genres.includes(this.state.selectedGenre)) {\n        this.setState({\n          genres: [...this.state.genres, this.state.selectedGenre]\n        });\n      }\n    };\n\n    this.removeGenre = e => {\n      this.setState({\n        genres: this.state.genres.filter(g => g !== e.currentTarget.dataset.id)\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const movieObject = {\n        title: this.state.title,\n        year: this.state.year,\n        runtime: this.state.runtime,\n        genres: this.state.genres,\n        director: this.state.director,\n        actors: this.state.actors,\n        plot: this.state.plot,\n        posterUrl: this.state.posterUrl\n      };\n      axios.post(`${SERVER_HOST}/movies`, movieObject).then(res => {\n        if (res.data) {\n          if (res.data.errorMessage) {\n            console.log(res.data.errorMessage);\n          } else {\n            console.log(\"Record added\");\n            this.setState({\n              redirectToHome: true\n            });\n          }\n\n          Swal.fire({\n            title: \"Record Added\",\n            text: \"The movie has been added.\",\n            icon: \"success\",\n            showConfirmButton: false,\n            timer: 1500\n          });\n        } else {\n          console.log(\"Record not added\");\n        }\n      });\n    };\n\n    this.state = {\n      title: \"\",\n      year: \"\",\n      runtime: \"\",\n      selectedGenre: \"\",\n      genres: [],\n      director: \"\",\n      actors: \"\",\n      plot: \"\",\n      posterUrl: \"\",\n      redirectToHome: false\n    };\n  }\n\n  componentDidMount() {\n    this.inputToFocus.focus();\n  }\n\n  render() {\n    const genres = [\"Action\", \"Adventure\", \"Animation\", \"Biography\", \"Comedy\", \"Crime\", \"Documentary\", \"Drama\", \"Family\", \"Fantasy\", \"Film-Noir\", \"Game-Show\", \"History\", \"Horror\", \"Music\", \"Musical\", \"Mystery\", \"News\", \"Reality-TV\", \"Romance\", \"Sci-Fi\", \"Sport\", \"Talk-Show\", \"Thriller\", \"War\", \"Western\"];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, \"Add New Movie\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, this.state.redirectToHome ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 40\n      }\n    }) : null, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n      ref: input => {\n        this.inputToFocus = input;\n      },\n      type: \"text\",\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      className: \"g-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"year\",\n      value: this.state.year,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"runtime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }, \"Runtime\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"runtime\",\n      value: this.state.runtime,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"genres\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, \"Genres\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"selectedGenre\",\n      as: \"select\",\n      onChange: this.handleChange,\n      defaultValue: \"DEFAULT\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"DEFAULT\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }, \"Select genre...\"), genres.filter(g => !this.state.genres.includes(g)).map(g => /*#__PURE__*/React.createElement(\"option\", {\n      key: g,\n      value: g,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 23\n      }\n    }, g))), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.addGenre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, \"Add Genre\")), this.state.genres.map(g => /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-secondary p-1 mt-2 mr-2\",\n      key: g,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, g, /*#__PURE__*/React.createElement(XLg, {\n      \"data-id\": g,\n      className: \"ml-1\",\n      onClick: this.removeGenre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"plot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    }, \"Plot\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"plot\",\n      as: \"textarea\",\n      value: this.state.plot,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"director\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 15\n      }\n    }, \"Director\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"director\",\n      value: this.state.director,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"actors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 15\n      }\n    }, \"Actors\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"actors\",\n      value: this.state.actors,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FileBase64, {\n      multiple: false,\n      onDone: _ref => {\n        let {\n          base64\n        } = _ref;\n        return setItem({ ...item,\n          image: base64\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success mr-2\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"btn btn-danger ml-2\",\n      to: \"/Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }, \"Cancel\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/luanakimley/nodejs-projects/movie-mern-stack/client/src/components/AddMovie.js"],"names":["React","Component","Redirect","Link","axios","SERVER_HOST","Form","Row","Col","Button","InputGroup","Swal","XLg","FileBase64","AddMovie","constructor","props","handleChange","e","setState","target","name","value","addGenre","state","selectedGenre","genres","includes","removeGenre","filter","g","currentTarget","dataset","id","handleSubmit","preventDefault","movieObject","title","year","runtime","director","actors","plot","posterUrl","post","then","res","data","errorMessage","console","log","redirectToHome","fire","text","icon","showConfirmButton","timer","componentDidMount","inputToFocus","focus","render","input","map","base64","setItem","item","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nimport { Form, Row, Col, Button, InputGroup } from \"react-bootstrap\";\nimport Swal from \"sweetalert2\";\nimport { XLg } from \"react-bootstrap-icons\";\nimport FileBase64 from \"react-file-base64\";\n\nexport default class AddMovie extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      year: \"\",\n      runtime: \"\",\n      selectedGenre: \"\",\n      genres: [],\n      director: \"\",\n      actors: \"\",\n      plot: \"\",\n      posterUrl: \"\",\n      redirectToHome: false,\n    };\n  }\n\n  componentDidMount() {\n    this.inputToFocus.focus();\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  addGenre = (e) => {\n    if (\n      this.state.selectedGenre !== \"\" &&\n      !this.state.genres.includes(this.state.selectedGenre)\n    ) {\n      this.setState({\n        genres: [...this.state.genres, this.state.selectedGenre],\n      });\n    }\n  };\n\n  removeGenre = (e) => {\n    this.setState({\n      genres: this.state.genres.filter((g) => g !== e.currentTarget.dataset.id),\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const movieObject = {\n      title: this.state.title,\n      year: this.state.year,\n      runtime: this.state.runtime,\n      genres: this.state.genres,\n      director: this.state.director,\n      actors: this.state.actors,\n      plot: this.state.plot,\n      posterUrl: this.state.posterUrl,\n    };\n\n    axios.post(`${SERVER_HOST}/movies`, movieObject).then((res) => {\n      if (res.data) {\n        if (res.data.errorMessage) {\n          console.log(res.data.errorMessage);\n        } else {\n          console.log(\"Record added\");\n          this.setState({ redirectToHome: true });\n        }\n        Swal.fire({\n          title: \"Record Added\",\n          text: \"The movie has been added.\",\n          icon: \"success\",\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      } else {\n        console.log(\"Record not added\");\n      }\n    });\n  };\n\n  render() {\n    const genres = [\n      \"Action\",\n      \"Adventure\",\n      \"Animation\",\n      \"Biography\",\n      \"Comedy\",\n      \"Crime\",\n      \"Documentary\",\n      \"Drama\",\n      \"Family\",\n      \"Fantasy\",\n      \"Film-Noir\",\n      \"Game-Show\",\n      \"History\",\n      \"Horror\",\n      \"Music\",\n      \"Musical\",\n      \"Mystery\",\n      \"News\",\n      \"Reality-TV\",\n      \"Romance\",\n      \"Sci-Fi\",\n      \"Sport\",\n      \"Talk-Show\",\n      \"Thriller\",\n      \"War\",\n      \"Western\",\n    ];\n\n    return (\n      <div id=\"form\">\n        <h2>Add New Movie</h2>\n        <div className=\"form-container\">\n          {this.state.redirectToHome ? <Redirect to=\"/Home\" /> : null}\n\n          <Form>\n            <Form.Group controlId=\"title\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                ref={(input) => {\n                  this.inputToFocus = input;\n                }}\n                type=\"text\"\n                name=\"title\"\n                value={this.state.title}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n\n            <Row className=\"g-2\">\n              <Col md>\n                <Form.Group controlId=\"year\">\n                  <Form.Label>Year</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"year\"\n                    value={this.state.year}\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n              </Col>\n              <Col md>\n                <Form.Group controlId=\"runtime\">\n                  <Form.Label>Runtime</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"runtime\"\n                    value={this.state.runtime}\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Form.Group controlId=\"genres\">\n              <Form.Label>Genres</Form.Label>\n\n              <InputGroup>\n                <Form.Control\n                  name=\"selectedGenre\"\n                  as=\"select\"\n                  onChange={this.handleChange}\n                  defaultValue={\"DEFAULT\"}\n                >\n                  <option value=\"DEFAULT\" disabled>\n                    Select genre...\n                  </option>\n                  {genres\n                    .filter((g) => !this.state.genres.includes(g))\n                    .map((g) => (\n                      <option key={g} value={g}>\n                        {g}\n                      </option>\n                    ))}\n                </Form.Control>\n\n                <Button onClick={this.addGenre}>Add Genre</Button>\n              </InputGroup>\n              {this.state.genres.map((g) => (\n                <span className=\"badge badge-secondary p-1 mt-2 mr-2\" key={g}>\n                  {g}\n                  <XLg\n                    data-id={g}\n                    className=\"ml-1\"\n                    onClick={this.removeGenre}\n                  />\n                </span>\n              ))}\n            </Form.Group>\n\n            <Form.Group controlId=\"plot\">\n              <Form.Label>Plot</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"plot\"\n                as=\"textarea\"\n                value={this.state.plot}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"director\">\n              <Form.Label>Director</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"director\"\n                value={this.state.director}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"actors\">\n              <Form.Label>Actors</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"actors\"\n                value={this.state.actors}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <FileBase64\n                multiple={false}\n                onDone={({ base64 }) => setItem({ ...item, image: base64 })}\n              />\n            </Form.Group>\n\n            <button\n              className=\"btn btn-success mr-2\"\n              onClick={this.handleSubmit}\n            >\n              Add\n            </button>\n\n            <Link className=\"btn btn-danger ml-2\" to={\"/Home\"}>\n              Cancel\n            </Link>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}